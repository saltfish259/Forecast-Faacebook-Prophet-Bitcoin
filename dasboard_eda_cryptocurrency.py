# -*- coding: utf-8 -*-
"""Dasboard EDA Cryptocurrency.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ul74KJ7efMDjCTo4VhoX-K_p95auPa4h

## Library
"""

import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import matplotlib.pyplot as plt
import seaborn as sns

"""## Configuration"""

st.set_page_config(page_title="Cryptocurrency EDA Dashboard", page_icon="💰", layout="wide")

"""## Load Data"""

@st.cache_data
def load_data():
  df = pd.read_csv('Bitcoin Pulse Hourly Dataset from Markets Trends and Fear.csv')
  df['timestamp'] = pd.to_datetime(df['timestamp'])
  df.set_index('timestamp', inplace=True)
  return df

df = load_data()

"""## Setup"""

crypto_name_mapping = {
    'BNB_USDT_1h_close': 'Binance Coin (BNB)',
    'BTC_USDT_1h_close': 'Bitcoin (BTC)',
    'DOGE_USDT_1h_close': 'Dogecoin (DOGE)',
    'ETH_USDT_1h_close': 'Ethereum (ETH)',
    'SOL_USDT_1h_close': 'Solana (SOL)',
    'XRP_USDT_1h_close': 'Ripple (XRP)'
}
reverse_crypto_mapping = {v: k for k, v in crypto_name_mapping.items()}
crypto_close_options = list(crypto_name_mapping.values())

"""## Sidebar Filter"""

st.sidebar.header("🔎 Filter Data")
selected_crypto = st.sidebar.selectbox("Pilih Cryptocurrency:", crypto_close_options)
start_date = st.sidebar.date_input("Tanggal Mulai:", df['timestamp'].min().date())
end_date = st.sidebar.date_input("Tanggal Akhir:", df['timestamp'].max().date())

# Filter data
col_name = reverse_crypto_mapping[selected_crypto]
filtered_df = df[(df['timestamp'].dt.date >= start_date) & (df['timestamp'].dt.date <= end_date)]
data_plot = filtered_df[['timestamp', col_name]].dropna()

"""# Tittle"""

st.title("📈 Cryptocurrency EDA Dashboard")

st.markdown("""
Selamat datang di **Dashboard Analisis Data Cryptocurrency**.
Di sini Anda bisa memantau harga penutupan, return harian, volatilitas, harga OHLC, dan volume perdagangan berbagai crypto secara interaktif.
""")

"""# Grafik 1 : Close Price"""

st.header("📊 Grafik 1: Harga Penutupan (Close Price)")

st.markdown("_Grafik ini menampilkan tren harga penutupan untuk memahami pergerakan harga cryptocurrency._")

fig1 = px.line(data_plot, x='timestamp', y=col_name, title=f'Harga Penutupan {selected_crypto}')
fig1.update_layout(xaxis_title='Tanggal', yaxis_title='Harga (USD)', showlegend=False)
st.plotly_chart(fig1, use_container_width=True)

last_price = data_plot[col_name].iloc[-1]
st.markdown(f"**Harga Terakhir {selected_crypto}: ${last_price:,.2f}**")

"""## Grafik 2: Perbandingan Close Price"""

st.header("📊 Grafik 2: Perbandingan Harga Penutupan")

st.markdown("_Membandingkan tren harga dua cryptocurrency berbeda untuk analisis perbedaan pergerakan harga._")

selected_crypto2 = st.sidebar.selectbox("Pilih Cryptocurrency Perbandingan:", crypto_close_options, key="crypto2")
col_name2 = reverse_crypto_mapping[selected_crypto2]

compare_df = filtered_df[['timestamp', col_name, col_name2]].dropna()

fig2 = px.line(compare_df, x='timestamp', y=[col_name, col_name2], title=f'{selected_crypto} vs {selected_crypto2}')
fig2.update_layout(xaxis_title='Tanggal', yaxis_title='Harga (USD)')
st.plotly_chart(fig2, use_container_width=True)

last_price2 = compare_df[col_name2].iloc[-1]
st.markdown(f"**Harga Terakhir {selected_crypto}: ${last_price:,.2f} | {selected_crypto2}: ${last_price2:,.2f}**")

"""## Grafik 3: Return Harian"""

st.header("📊 Grafik 3: Return Harian")

st.markdown("_Return harian mengukur perubahan harga harian dalam bentuk persentase._")

daily_return = data_plot.set_index('timestamp')[col_name].pct_change().dropna()

fig3 = px.line(daily_return, title=f"Return Harian {selected_crypto}")
fig3.update_layout(xaxis_title='Tanggal', yaxis_title='Return (%)')
st.plotly_chart(fig3, use_container_width=True)

st.markdown(f"**Return Terakhir {selected_crypto}: {daily_return.iloc[-1]*100:.2f}%**")

"""## Grafik 4: Volatilitas Rolling (7 Hari)"""

st.header("📊 Grafik 4: Volatilitas (Rolling 7 Hari)")

st.markdown("_Volatilitas mengukur besarnya fluktuasi harga dalam periode tertentu._")

rolling_volatility = daily_return.rolling(window=7).std() * 100

fig4 = px.line(rolling_volatility, title=f"Volatilitas 7 Hari {selected_crypto}")
fig4.update_layout(xaxis_title='Tanggal', yaxis_title='Volatilitas (%)')
st.plotly_chart(fig4, use_container_width=True)

st.markdown(f"**Volatilitas Terakhir {selected_crypto}: {rolling_volatility.iloc[-1]:.2f}%**")

"""## Grafik 5: Harga Tertinggi & Terendah"""

st.header("📊 Grafik 6: Volume Perdagangan")

st.markdown("_Volume memperlihatkan seberapa banyak cryptocurrency diperdagangkan dalam periode tertentu._")

volume_col_name = col_name.replace('close', 'volume')

if volume_col_name in filtered_df.columns:
    volume_data = filtered_df[['timestamp', volume_col_name]].dropna()

    fig6 = px.bar(volume_data, x='timestamp', y=volume_col_name, title=f'Volume Perdagangan {selected_crypto}')
    fig6.update_layout(xaxis_title='Tanggal', yaxis_title='Volume')
    st.plotly_chart(fig6, use_container_width=True)

    st.markdown(f"**Volume Terakhir {selected_crypto}: {volume_data[volume_col_name].iloc[-1]:,.0f} transaksi**")
else:
    st.warning("Data volume tidak tersedia untuk cryptocurrency ini.")

"""# Grafik 6: Volume Perdagangan"""

st.header("📊 Grafik 6: Volume Perdagangan")

st.markdown("_Volume menggambarkan jumlah transaksi yang terjadi dalam periode tertentu untuk cryptocurrency._")

volume_col_name = col_name.replace('close', 'volume')

if volume_col_name in filtered_df.columns:
    volume_data = filtered_df[['timestamp', volume_col_name]].dropna()

    fig6 = px.bar(volume_data, x='timestamp', y=volume_col_name, title=f'Volume Perdagangan {selected_crypto}')
    fig6.update_layout(xaxis_title='Tanggal', yaxis_title='Volume')
    st.plotly_chart(fig6, use_container_width=True)

    last_volume = volume_data[volume_col_name].iloc[-1]
    st.markdown(f"**Volume Terakhir {selected_crypto}: {last_volume:,.0f} transaksi**")
else:
    st.warning("Data volume tidak tersedia untuk cryptocurrency ini.")

st.markdown("---")
st.caption("Dashboard dibuat dengan ❤️ oleh Razif Zulvikar Hatuwe | Data: https://www.kaggle.com/datasets/wlwwwlw/bitcoin-pulse-market-trends-and-fear-dataset")