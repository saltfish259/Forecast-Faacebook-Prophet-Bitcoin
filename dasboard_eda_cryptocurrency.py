# -*- coding: utf-8 -*-
"""Dasboard EDA Cryptocurrency.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ul74KJ7efMDjCTo4VhoX-K_p95auPa4h

## Library
"""

import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import matplotlib.pyplot as plt
import seaborn as sns

"""## Load Data"""

@st.cache_data
def load_data():
  df = pd.read_csv('Bitcoin Pulse Hourly Dataset from Markets Trends and Fear.csv')
  df['timestamp'] = pd.to_datetime(df['timestamp'])
  df.set_index('timestamp', inplace=True)
  return df

df = load_data()

"""# Tittle"""

st.title("üìà Cryptocurrency EDA Dashboard")
st.markdown("""
Selamat datang di Dasboard EDA Cryptocurrency!
Dataset ini berisi harga beberapa cryptocurrency.

**Data Sumber:** [sumber data]
**Penjelasan Singkat:** Cryptocurrency adalah mata uang digital yang menggunakan kriptografi untuk keamanan transaksi dan pengelolaan unit baru.
""")

"""## Pilih Crypto Untuk Analisa"""

crypto_close_option = [
    'BNB_USDT_1h_close', 'BTC_USDT_1h_close', 'DOGE_USDT_1h_close',
    'ETH_USDT_1h_close', 'SOL_USDT_1h_close', 'XRP_USDT_1h_close'
]
selected_crypto1 = st.selectbox('Pilih Cryptocurrency Untuk Analisa (Close Price):', crypto_close_option)

"""# Grafik 1 : Close Price"""

st.subheader(f"üìà Grafik Close Price - {selected_crypto1}")
fig1 = px.line(df, y=selected_crypto1, title=f"Harga Close {selected_crypto1} dari waktu ke waktu")
st.plotly_chart(fig1)

"""## Pilihan Crypto Untuk Perbandingan"""

selected_crypto2 = st.selectbox('Pilih Cryptocurrency Untuk Perbandingan:', crypto_close_option)

"""## Grafik 2: Perbandingan Close Price"""

st.subheader("üìà Grafik Perbandingan Harga Close {selected_crypto1} vs {selected_crypto2}")
fig2 = px.line(df, y=[selected_crypto1, selected_crypto2], title=f"Perbandingan Harga Close {selected_crypto1} dan {selected_crypto2}")
st.plotly_chart(fig2)

"""## Grafik 3: Heatmap Korelasi"""

st.subheader("üß† Korelasi antar Cryptocurrency dan Indeks Global")
corr_cols = [col for col in df.columns if "close" in col.lower()]
corr = df[corr_cols].corr()

fig3, ax = plt.subplots(figsize=(14, 10))
sns.heatmap(corr, annot=True, cmap='coolwarm', ax=ax)
st.pyplot(fig3)

"""## Grafik 4: Return Harian"""

st.subheader(f"üìà Return Harian (%) - {selected_crypto1}")
returns = df[selected_crypto1].pct_change() * 100
fig4 = px.line(returns, title=f"Return Harian {selected_crypto1}")
st.plotly_chart(fig4)

"""## Grafik 5: Volatilitas Rolling (7 Hari)"""

st.subheader(f"üìà Volatilitas Rolling (7 Hari) - {selected_crypto1}")
rolling_valotility = df[selected_crypto1].pct_change().rolling(window=7).std() * 100
fig5 = px.line(rolling_valotility, title=f"Volatilitas Rolling (7 Hari) {selected_crypto1}")
st.plotly_chart(fig5)

"""## Grafik 6: Harga Tertinggi & Terendah"""

st.subheader(f"üìä Harga Tertinggi dan Terendah - {selected_crypto1.split('_')[0]}")
open_col = selected_crypto1.replace("close", "open")
high_col = selected_crypto1.replace("close", "high")
low_col = selected_crypto1.replace("close", "low")

fig6 = px.line(df, y=[open_col, high_col, low_col, selected_crypto1],
               labels={'value': 'Harga', 'variable': 'Tipe Harga'},
               title=f"Open, High, Low, Close untuk {selected_crypto1.split('_')[0]}")
st.plotly_chart(fig6)

"""# Grafik 7: Volume Perdagangan"""

st.subheader(f"üìà Volume Perdagangan - {selected_crypto1.split('_')[0]}")
volume_col = selected_crypto1.replace("close", "volume")
if volume_col in df.columns:
    fig7 = px.line(df, y=volume_col, title=f"Volume Perdagangan {selected_crypto1.split('_')[0]}")
    st.plotly_chart(fig7)
else:
    st.warning("Data Volume untuk cryptocurrency ini tidak tersedia.")

# Footer
st.markdown("""
---
Dashboard dibuat dengan ‚ù§Ô∏è menggunakan Streamlit.
Silahkan pilih Cryptocurrency lain untuk eksplorasi lebih lanjut.
""")